/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
import { ProductProjectionPagedQueryResponse } from '../../models/product';
import { executeRequest, QueryParam } from '../../shared/utils/common-types';
import { ApiRequest } from '../../shared/utils/requests-utils';
import { ByProjectKeyInStoreKeyByStoreKeyProductProjectionsByIDRequestBuilder } from './by-project-key-in-store-key-by-store-key-product-projections-by-id-request-builder';
import { ByProjectKeyInStoreKeyByStoreKeyProductProjectionsKeyByKeyRequestBuilder } from './by-project-key-in-store-key-by-store-key-product-projections-key-by-key-request-builder';
export declare class ByProjectKeyInStoreKeyByStoreKeyProductProjectionsRequestBuilder {
    protected readonly args: {
        pathArgs: {
            projectKey: string;
            storeKey: string;
        };
        executeRequest: executeRequest;
        baseUri?: string;
    };
    constructor(args: {
        pathArgs: {
            projectKey: string;
            storeKey: string;
        };
        executeRequest: executeRequest;
        baseUri?: string;
    });
    withKey(childPathArgs: {
        key: string;
    }): ByProjectKeyInStoreKeyByStoreKeyProductProjectionsKeyByKeyRequestBuilder;
    withId(childPathArgs: {
        ID: string;
    }): ByProjectKeyInStoreKeyByStoreKeyProductProjectionsByIDRequestBuilder;
    /**
     *	You can use the product projections query endpoint to get the current or staged representations of Products.
     *	When used with an API client that has the view_published_products:{projectKey} scope,
     *	this endpoint only returns published (current) product projections.
     *
     */
    get(methodArgs?: {
        queryArgs?: {
            staged?: boolean;
            priceCurrency?: string;
            priceCountry?: string;
            priceCustomerGroup?: string;
            priceChannel?: string;
            localeProjection?: string;
            storeProjection?: string;
            expand?: string | string[];
            sort?: string | string[];
            limit?: number;
            offset?: number;
            withTotal?: boolean;
            where?: string | string[];
            [key: string]: QueryParam;
        };
        headers?: {
            [key: string]: string | string[];
        };
    }): ApiRequest<ProductProjectionPagedQueryResponse>;
}
